// API definition for Geese service.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "xyz.breakit.geese";
option java_outer_classname = "GeeseProto";

package geese;

/*
 * Unary service to request goose positions.
 */
service GeeseService {
    /*
     * Return next line of geese positions.
     */
    rpc GetGeese (GetGeeseRequest) returns (GeeseResponse);
}

/*
 * Request to recieve next lines of geese.
 */
message GetGeeseRequest {
    /*
     * Number of requested horizontal lines.
     */
    int32 lines_count = 1;
    /*
     * Line width: max number of positions (pixels) in one sceen horizontal line.
     */
    int32 line_width = 2;
    /*
     * Single goose width in pixels.
     * This arguments is used to make sure geese in one line don't overlap.
     */
    int32 goose_width = 3;
}

/*
 * Contains list of horizontal lines with geese.
 */
message GeeseResponse {
    /*
     * Horizontal lines with geese, up to a requested number.
     */
    repeated GeeseLine lines = 1;
}

/*
 * Contains goose positions in a horizontal line.
 */
message GeeseLine {
    /*
     * Geese locators (types and positions) for a given line
     */
    repeated GooseLocator geese_locators = 1;

}

/*
 * Geese Types
 */
enum GooseType {
    GOOSE_TYPE_UNSPECIFIED = 0;
    GOOSE_TYPE_CANADA_GOOSE = 1;
    GOOSE_TYPE_BLACK_GOOSE = 2;
    GOOSE_TYPE_WHITE_GOOSE = 3;
    GOOSE_TYPE_GREY_GOOSE = 4;
}

/*
 * Contains information about a goose's position and type
 */
message GooseLocator {
    /*
     * Goose position in a line. Number represent verticals position
     * of a geese. For example, 10  means there is a goose in the
     * tenth position of the line.
     */
    int32 goose_position = 1;

    /*
     * A type of that specific goose
     */
    GooseType goose_type = 2;
}
